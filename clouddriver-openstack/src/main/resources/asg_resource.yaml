heat_template_version: 2016-04-08
description: A load balanced server for Spinnaker
parameters:
  flavor:
    type: string
    description: flavor used by the servers
  image:
    type: string
    description: Image used for servers
  internal_ports:
    type: comma_delimited_list
    description: internal ports on which each server will listen
  pool_ids:
    type: comma_delimited_list
    description: Load balancer pools to use for this group
  metadata:
    type: json
    description: server instance metadata
  network_id:
    type: string
    description: Network used by each server
  security_groups:
    type: comma_delimited_list
    description: security groups associate to each server
  subnet_id:
    type: string
    description: Subnet used to allocate a fixed IP for each server
resources:
  server:
    type: OS::Nova::Server
    properties:
      flavor: {get_param: flavor}
      image: {get_param: image}
      metadata: {get_param: metadata}
      security_groups: {get_param: security_groups}
      networks:
        - network: {get_param: network_id}
        - subnet: {get_param: subnet_id}
  member:
    type: OS::Heat::ResourceGroup
    properties:
      count: 1
      removal_policies: [{resource_list: [{resource: asg_member.yaml}]}]
      resource_def:
        type: asg_member.yaml
        properties:
          address: {get_attr: [server, first_address]}
outputs:
  # we need to store subtemplate in asg output from create, as it is required to do an update and there is no native way
  # of obtaining it from a stack
  asg_member:
    description: asg_member.yaml template value
    value: {get_file: asg_member.yaml}
  server_ip:
    description: IP Address of the load-balanced server
    value: { get_attr: [server, first_address] }
  lb_member:
    description: LB member details
    value: { get_attr: [member, show] }
